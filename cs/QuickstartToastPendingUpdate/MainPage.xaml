<Page
    x:Class="QuickstartToastPendingUpdate.MainPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:QuickstartToastPendingUpdate"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">

    <ScrollViewer Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">

        <StackPanel Margin="24">

            <TextBlock
                Text="Quickstart: Toast Pending Update"
                Style="{StaticResource TitleTextBlockStyle}"
                TextWrapping="Wrap"/>

            <RichTextBlock Margin="0,12,0,0">
                <Paragraph>
                    This app illustrates how to use toast background activation with pending update, in order to perform multi-step interactions on toast notifications.
                </Paragraph>
            </RichTextBlock>

            <Button
                x:Name="ButtonSendToast"
                Content="Click to pop first toast"
                Click="ButtonSendToast_Click"
                HorizontalAlignment="Stretch"
                Margin="0,12,0,0"/>

            <RichTextBlock Margin="0,12,0,0">
                <Paragraph>The button above pops a new toast using the local toast API's, and it includes buttons that use background activation with pending update.</Paragraph>
                <Paragraph/>
                <Paragraph>When these buttons are clicked, a background task is kicked off but the toast stays present and the button greys out. Then, our background task replaces the toast to move the user to the next step.</Paragraph>
                <Paragraph/>
                <Paragraph>Feel free to close the app after clicking the button. The toast will continue to operate through background tasks when the app is closed.</Paragraph>
            </RichTextBlock>

        </StackPanel>



    </ScrollViewer>
</Page>
